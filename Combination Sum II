class Solution {
    public List<List<Integer>> combinationSum2(int[] arr, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        Arrays.sort(arr);
        backtrack(0, arr, target, list, ans);
        return ans;
    }

    public void backtrack(int idx, int arr[], int target, List<Integer> list, List<List<Integer>> ans) {
        if (target == 0) {
            ans.add(new ArrayList<>(list));
            return;
        }

        for (int i = idx; i < arr.length; i++) {
            if (i > idx && arr[i] == arr[i - 1]) {
                continue;
            }
            if (arr[i] > target) {
                break;
            }

            list.add(arr[i]);
            backtrack(i + 1, arr, target - arr[i], list, ans);
            list.remove(list.size() - 1);
        }
    }
}
