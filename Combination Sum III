class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        backtrack(1, k, n, list, ans);
        return ans;
    }

    public void backtrack(int element, int k, int target, List<Integer> list, List<List<Integer>> ans) {
        if (list.size() >= k) {
            if (target == 0) {
                ans.add(new ArrayList<>(list));
            }
            return;
        }

        for (int i = element; i <= 9; i++) {
            if (i > target) {
                break;
            }

            list.add(i);
            backtrack(i + 1, k, target - i, list, ans);
            list.remove(list.size() - 1);
        }
    }
}
